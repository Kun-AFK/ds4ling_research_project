{
    "type": [
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        0,
        1,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "wine_data_tidy <- data_wine_raw %>%",
        "There were 18 warnings (use warnings() to see them)\n",
        "+ ",
        "  rename(",
        "+ ",
        "    FixAcid = fixed.acidity,",
        "+ ",
        "    VolAcid = volatile.acidity,",
        "+ ",
        "    CitAcid = citric.acid,",
        "+ ",
        "    Sugar   = residual.sugar,",
        "+ ",
        "    Chlor   = chlorides,",
        "+ ",
        "    FSO2    = free.sulfur.dioxide,",
        "+ ",
        "    TSO2    = total.sulfur.dioxide,",
        "+ ",
        "    Dens    = density,",
        "+ ",
        "    pH      = pH,",
        "+ ",
        "    Sulph   = sulphates,",
        "+ ",
        "    Alc     = alcohol,",
        "+ ",
        "    Qual    = quality",
        "+ ",
        "  )",
        "> ",
        "data_wine_tidy <- data_wine_raw %>%",
        "+ ",
        "  rename(",
        "+ ",
        "    FixAcid = fixed.acidity,",
        "+ ",
        "    VolAcid = volatile.acidity,",
        "+ ",
        "    CitAcid = citric.acid,",
        "+ ",
        "    Sugar   = residual.sugar,",
        "+ ",
        "    Chlor   = chlorides,",
        "+ ",
        "    FSO2    = free.sulfur.dioxide,",
        "+ ",
        "    TSO2    = total.sulfur.dioxide,",
        "+ ",
        "    Dens    = density,",
        "+ ",
        "    pH      = pH,",
        "+ ",
        "    Sulph   = sulphates,",
        "+ ",
        "    Alc     = alcohol,",
        "+ ",
        "    Qual    = quality",
        "+ ",
        "  )",
        "\nRestarting R session...\n\n",
        "> ",
        "# 9.1 Fit the model (default: Gaussian family)",
        "> ",
        "model_bayes <- stan_glm(",
        "+ ",
        "  Qual ~ .,",
        "+ ",
        "  data            = data_wine_tidy,",
        "+ ",
        "  family          = gaussian(),",
        "+ ",
        "  prior           = normal(0, 1),        # Prior for fixed effects",
        "+ ",
        "  prior_intercept = normal(0, 5),        # Prior for intercept",
        "+ ",
        "  chains          = 4,",
        "+ ",
        "  cores           = parallel::detectCores(),",
        "+ ",
        "  iter            = 2000,",
        "+ ",
        "  seed            = 2025",
        "+ ",
        ")",
        "Error in stan_glm(Qual ~ ., data = data_wine_tidy, family = gaussian(),  : \n  could not find function \"stan_glm\"\n",
        "> ",
        "# Loading necessary library",
        "> ",
        "library(tidyverse)",
        "── \u001B[1mAttaching core tidyverse packages\u001B[22m ─────────────────────────── tidyverse 2.0.0 ──\n\u001B[32m✔\u001B[39m \u001B[34mdplyr    \u001B[39m 1.1.4     \u001B[32m✔\u001B[39m \u001B[34mreadr    \u001B[39m 2.1.5\n\u001B[32m✔\u001B[39m \u001B[34mforcats  \u001B[39m 1.0.0     \u001B[32m✔\u001B[39m \u001B[34mstringr  \u001B[39m 1.5.1\n\u001B[32m✔\u001B[39m \u001B[34mggplot2  \u001B[39m 3.5.1     \u001B[32m✔\u001B[39m \u001B[34mtibble   \u001B[39m 3.2.1\n\u001B[32m✔\u001B[39m \u001B[34mlubridate\u001B[39m 1.9.4     \u001B[32m✔\u001B[39m \u001B[34mtidyr    \u001B[39m 1.3.1\n\u001B[32m✔\u001B[39m \u001B[34mpu",
        "rrr    \u001B[39m 1.0.4     \n── \u001B[1mConflicts\u001B[22m ───────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mfilter()\u001B[39m masks \u001B[34mstats\u001B[39m::filter()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mlag()\u001B[39m    masks \u001B[34mstats\u001B[39m::lag()\n\u001B[36mℹ\u001B[39m Use the \u001B]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001B]8;;\u0007 to force all conflicts to become errors\n",
        "Warning messages:\n1: package ‘purrr’ was built under R version 4.4.3 \n2: package ‘lubridate’ was built under R version 4.4.3 \n",
        "> ",
        "library(here)",
        "here() starts at C:/Users/zhang/OneDrive/Desktop/ds4ling_research_project\n",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(ds4ling)",
        "\n ds4ling loaded\n Happy coding!\n",
        "> ",
        "library(lme4)",
        "Loading required package: Matrix\n\nAttaching package: ‘Matrix’\n\nThe following objects are masked from ‘package:tidyr’:\n\n    expand, pack, unpack\n\nWarning message:\npackage ‘lme4’ was built under R version 4.4.3 \n",
        "> ",
        "library(lmerTest)",
        "\nAttaching package: ‘lmerTest’\n\nThe following object is masked from ‘package:lme4’:\n\n    lmer\n\nThe following object is masked from ‘package:stats’:\n\n    step\n\nWarning message:\npackage ‘lmerTest’ was built under R version 4.4.3 \n",
        "> ",
        "library(GGally)       # ggpairs()",
        "Warning message:\npackage ‘GGally’ was built under R version 4.4.3 \n",
        "> ",
        "library(corrplot)     # corrplot()",
        "corrplot 0.95 loaded\nWarning message:\npackage ‘corrplot’ was built under R version 4.4.3 \n",
        "> ",
        "library(ggcorrplot)   # ggcorrplot()",
        "Warning message:\npackage ‘ggcorrplot’ was built under R version 4.4.3 \n",
        "> ",
        "> ",
        "# Read the raw data",
        "> ",
        "data_wine_raw <- read.csv(",
        "+ ",
        "  here(\"data_raw\", \"winequality-red.csv\"),",
        "+ ",
        "  header = TRUE,",
        "+ ",
        "  sep = \";\",",
        "+ ",
        "  stringsAsFactors = FALSE",
        "+ ",
        ")",
        "> ",
        "> ",
        "# Test if there has any NA in data_wine_raw",
        "> ",
        "anyNA(data_wine_raw)",
        "[1] FALSE\n",
        "> ",
        "colSums(is.na(data_wine_raw))",
        "       fixed.acidity     volatile.acidity          citric.acid \n                   0                    0                    0 \n      residual.sugar            chlorides  free.sulfur.dioxide \n                   0                    0                    0 \ntotal.sulfur.dioxide              density                   pH \n                   0                    0                    0 \n           sulphates              alcohol              quality \n                   0                    0                    0 \n",
        "> ",
        "> ",
        "# View data structure",
        "> ",
        "glimpse(data_wine_raw)",
        "Rows: 1,599\nColumns: 12\n$ fixed.acidity        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 7.4, 7.8, 7.8, 11.2, 7.4, 7.4, 7.9, 7.3, 7.8, 7.5, 6…\n$ volatile.acidity     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.700, 0.880, 0.760, 0.280, 0.700, 0.660, 0.600, 0.6…\n$ citric.acid          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.00, 0.00, 0.04, 0.56, 0.00, 0.00, 0.06, 0.00, 0.02…\n$ residual.sugar       \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 1.9, 2.6, 2.3, 1.9, 1.9, 1.8, 1.6, 1.2, 2.0, 6.1, 1.…\n$ chlorides            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m",
        "\u001B[23m 0.076, 0.098, 0.092, 0.075, 0.076, 0.075, 0.069, 0.0…\n$ free.sulfur.dioxide  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 11, 25, 15, 17, 11, 13, 15, 15, 9, 17, 15, 17, 16, 9…\n$ total.sulfur.dioxide \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 34, 67, 54, 60, 34, 40, 59, 21, 18, 102, 65, 102, 59…\n$ density              \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.9978, 0.9968, 0.9970, 0.9980, 0.9978, 0.9978, 0.99…\n$ pH                   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 3.51, 3.20, 3.26, 3.16, 3.51, 3.51, 3.30, 3.39, 3.36…\n$ sulphate",
        "s            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.56, 0.68, 0.65, 0.58, 0.56, 0.56, 0.46, 0.47, 0.57…\n$ alcohol              \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 9.4, 9.8, 9.8, 9.8, 9.4, 9.4, 9.4, 10.0, 9.5, 10.5, …\n$ quality              \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m 5, 5, 5, 6, 5, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5, 7, 5…\n",
        "> ",
        "> ",
        "summary(data_wine_raw)",
        " fixed.acidity   volatile.acidity  citric.acid    residual.sugar  \n Min.   : 4.60   Min.   :0.1200   Min.   :0.000   Min.   : 0.900  \n 1st Qu.: 7.10   1st Qu.:0.3900   1st Qu.:0.090   1st Qu.: 1.900  \n Median : 7.90   Median :0.5200   Median :0.260   Median : 2.200  \n Mean   : 8.32   Mean   :0.5278   Mean   :0.271   Mean   : 2.539  \n 3rd Qu.: 9.20   3rd Qu.:0.6400   3rd Qu.:0.420   3rd Qu.: 2.600  \n Max.   :15.90   Max.   :1.5800   Max.   :1.000   Max.   :15.500  \n   chlorides       free.sulfur.dioxide tota",
        "l.sulfur.dioxide    density      \n Min.   :0.01200   Min.   : 1.00       Min.   :  6.00       Min.   :0.9901  \n 1st Qu.:0.07000   1st Qu.: 7.00       1st Qu.: 22.00       1st Qu.:0.9956  \n Median :0.07900   Median :14.00       Median : 38.00       Median :0.9968  \n Mean   :0.08747   Mean   :15.87       Mean   : 46.47       Mean   :0.9967  \n 3rd Qu.:0.09000   3rd Qu.:21.00       3rd Qu.: 62.00       3rd Qu.:0.9978  \n Max.   :0.61100   Max.   :72.00       Max.   :289.00       Max.   :1.0037  \n       pH       ",
        "   sulphates         alcohol         quality     \n Min.   :2.740   Min.   :0.3300   Min.   : 8.40   Min.   :3.000  \n 1st Qu.:3.210   1st Qu.:0.5500   1st Qu.: 9.50   1st Qu.:5.000  \n Median :3.310   Median :0.6200   Median :10.20   Median :6.000  \n Mean   :3.311   Mean   :0.6581   Mean   :10.42   Mean   :5.636  \n 3rd Qu.:3.400   3rd Qu.:0.7300   3rd Qu.:11.10   3rd Qu.:6.000  \n Max.   :4.010   Max.   :2.0000   Max.   :14.90   Max.   :8.000  \n",
        "> ",
        "> ",
        "data_wine_tidy <- data_wine_raw %>%",
        "+ ",
        "  rename(",
        "+ ",
        "    FixAcid = fixed.acidity,",
        "+ ",
        "    VolAcid = volatile.acidity,",
        "+ ",
        "    CitAcid = citric.acid,",
        "+ ",
        "    Sugar   = residual.sugar,",
        "+ ",
        "    Chlor   = chlorides,",
        "+ ",
        "    FSO2    = free.sulfur.dioxide,",
        "+ ",
        "    TSO2    = total.sulfur.dioxide,",
        "+ ",
        "    Dens    = density,",
        "+ ",
        "    pH      = pH,",
        "+ ",
        "    Sulph   = sulphates,",
        "+ ",
        "    Alc     = alcohol,",
        "+ ",
        "    Qual    = quality",
        "+ ",
        "  )",
        "> ",
        "> ",
        "> ",
        "# 3.3 dplyr summary: mean, median, first/third quartile",
        "> ",
        "data_wine_tidy |>",
        "+ ",
        "  summarise(across(",
        "+ ",
        "    .cols = everything(),",
        "+ ",
        "    .fns = list(",
        "+ ",
        "      mean   = ~ mean(.x, na.rm = TRUE),",
        "+ ",
        "      median = ~ median(.x, na.rm = TRUE),",
        "+ ",
        "      Q1     = ~ quantile(.x, 0.25, na.rm = TRUE),",
        "+ ",
        "      Q3     = ~ quantile(.x, 0.75, na.rm = TRUE)",
        "+ ",
        "    ),",
        "+ ",
        "    .names = \"{.col}_{.fn}\"",
        "+ ",
        "  )) |>",
        "+ ",
        "  pivot_longer(everything(),",
        "+ ",
        "               names_to  = c(\"variable\", \"stat\"),",
        "+ ",
        "               names_sep = \"_\",",
        "+ ",
        "               values_to = \"value\") %>%",
        "+ ",
        "  arrange(variable, stat)",
        "\u001B[38;5;246m# A tibble: 48 × 3\u001B[39m\n   variable stat     value\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m Alc      Q1      9.5   \n\u001B[38;5;250m 2\u001B[39m Alc      Q3     11.1   \n\u001B[38;5;250m 3\u001B[39m Alc      mean   10.4   \n\u001B[38;5;250m 4\u001B[39m Alc      median 10.2   \n\u001B[38;5;250m 5\u001B[39m Chlor    Q1      0.07  \n\u001B[38;5;250m 6\u001B[39m Chlor    Q3      0.09  \n\u001B[38;5;250m 7\u001B[39m Chlor    mean    0.087\u001B[4m5\u001B[24m\n\u001B[38;5;250m 8\u001B[39m Chlor    median  0",
        ".079 \n\u001B[38;5;250m 9\u001B[39m CitAcid  Q1      0.09  \n\u001B[38;5;250m10\u001B[39m CitAcid  Q3      0.42  \n\u001B[38;5;246m# ℹ 38 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "> ",
        "# Select the core variables and pivot to long format",
        "> ",
        "data_core <- data_wine_tidy |>",
        "+ ",
        "  select(FixAcid, VolAcid, Alc, Qual) |>",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = everything(),",
        "+ ",
        "    names_to  = \"Variable\",",
        "+ ",
        "    values_to = \"Value\"",
        "+ ",
        "  )",
        "> ",
        "> ",
        "# Plot boxplots for core variables",
        "> ",
        "ggplot(data_core, aes(x = Variable, y = Value)) +",
        "+ ",
        "  geom_boxplot(fill = \"lightblue\", outlier.color = \"darkred\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Distribution of Core Variables (Boxplots)\",",
        "+ ",
        "    x     = NULL,",
        "+ ",
        "    y     = \"Value\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal(base_size = 14)",
        "> ",
        "> ",
        "# 4. Variable correlation heatmap",
        "> ",
        "> ",
        "# 4.1 Calculate correlation matrix",
        "> ",
        "corr_mat <- cor(data_wine_tidy, use = \"pairwise.complete.obs\")",
        "> ",
        "> ",
        "# 2. Generate a gradient color from blue to white to red",
        "> ",
        "my_col <- colorRampPalette(c(\"#2166AC\", \"white\", \"#B2182B\"))(200)",
        "> ",
        "> ",
        "# 3. Plot",
        "> ",
        "corrplot(",
        "+ ",
        "  corr_mat,",
        "+ ",
        "  method      = \"color\",      # Fill squares with color",
        "+ ",
        "  col         = my_col,       # Custom color scheme",
        "+ ",
        "  type        = \"upper\",      # Only plot upper triangle",
        "+ ",
        "  order       = \"hclust\",     # Sort by hierarchical clustering",
        "+ ",
        "  tl.col      = \"black\",      # Variable label color",
        "+ ",
        "  tl.srt      = 45,           # Rotate labels 45°",
        "+ ",
        "  tl.cex      = 0.8,          # Label font size",
        "+ ",
        "  addCoef.col = \"black\",      # Add coefficients in squares",
        "+ ",
        "  number.cex  = 0.7,          # Coefficient font size",
        "+ ",
        "  diag        = FALSE,        # Do not plot diagonal",
        "+ ",
        "  mar         = c(0,0,1,0)    # Leave space for title",
        "+ ",
        ")",
        "> ",
        "title(\"Wine Quality Variable correlation heatmap\", line = 0.5, cex.main = 1.2)",
        "> ",
        "> ",
        "# 4.3 ggcorrplot package example (more visually appealing)",
        "> ",
        "ggcorrplot(",
        "+ ",
        "  corr_mat,",
        "+ ",
        "  hc.order = TRUE,",
        "+ ",
        "  lab      = TRUE,          # Write coefficients in squares",
        "+ ",
        "  lab_size = 3,",
        "+ ",
        "  outline.col = \"white\"",
        "+ ",
        ")",
        "> ",
        "> ",
        "# 5. Pairwise scatterplot matrix (Pairwise scatterplots + correlations + density plots)",
        "> ",
        "> ",
        "# 5.1 Simplest: GGally::ggpairs",
        "> ",
        "GGally::ggpairs(",
        "+ ",
        "  data_wine_tidy,",
        "+ ",
        "  lower = list(continuous = wrap(\"points\", alpha = 0.3, size = 0.5)),",
        "+ ",
        "  upper = list(continuous = wrap(\"cor\", size = 3)),",
        "+ ",
        "  diag  = list(continuous = wrap(\"densityDiag\"))",
        "+ ",
        ")",
        "\r plot: [1, 1] [----------------------------------------------------]  1% est: 0s \r plot: [1, 2] [>---------------------------------------------------]  1% est: 5s \r plot: [1, 3] [>---------------------------------------------------]  2% est: 6s \r plot: [1, 4] [>---------------------------------------------------]  3% est: 6s \r plot: [1, 5] [=>--------------------------------------------------]  3% est: 6s \r plot: [1, 6] [=>--------------------------------------------------]  4% est: 7s \r plot: [1, 7] [==>-",
        "------------------------------------------------]  5% est: 7s \r plot: [1, 8] [==>-------------------------------------------------]  6% est: 7s \r plot: [1, 9] [==>-------------------------------------------------]  6% est: 7s \r plot: [1, 10] [===>-----------------------------------------------]  7% est: 7s \r plot: [1, 11] [===>-----------------------------------------------]  8% est: 7s \r plot: [1, 12] [===>-----------------------------------------------]  8% est: 7s \r plot: [2, 1] [====>-------------------",
        "----------------------------]  9% est: 7s \r plot: [2, 2] [====>-----------------------------------------------] 10% est: 7s \r plot: [2, 3] [====>-----------------------------------------------] 10% est: 7s \r plot: [2, 4] [=====>----------------------------------------------] 11% est: 7s \r plot: [2, 5] [=====>----------------------------------------------] 12% est: 7s \r plot: [2, 6] [=====>----------------------------------------------] 12% est: 7s \r plot: [2, 7] [======>-------------------------------------",
        "--------] 13% est: 7s \r plot: [2, 8] [======>---------------------------------------------] 14% est: 7s \r plot: [2, 9] [=======>--------------------------------------------] 15% est: 7s \r plot: [2, 10] [=======>-------------------------------------------] 15% est: 7s \r plot: [2, 11] [=======>-------------------------------------------] 16% est: 7s \r plot: [2, 12] [=======>-------------------------------------------] 17% est: 7s \r plot: [3, 1] [========>-------------------------------------------] 17% est: 7",
        "s \r plot: [3, 2] [========>-------------------------------------------] 18% est: 7s \r plot: [3, 3] [=========>------------------------------------------] 19% est: 6s \r plot: [3, 4] [=========>------------------------------------------] 19% est: 6s \r plot: [3, 5] [=========>------------------------------------------] 20% est: 6s \r plot: [3, 6] [==========>-----------------------------------------] 21% est: 6s \r plot: [3, 7] [==========>-----------------------------------------] 22% est: 6s \r plot: [3, 8] [==",
        "=========>----------------------------------------] 22% est: 6s \r plot: [3, 9] [===========>----------------------------------------] 23% est: 6s \r plot: [3, 10] [===========>---------------------------------------] 24% est: 6s \r plot: [3, 11] [===========>---------------------------------------] 24% est: 6s \r plot: [3, 12] [============>--------------------------------------] 25% est: 6s \r plot: [4, 1] [============>---------------------------------------] 26% est: 7s \r plot: [4, 2] [=============>--------",
        "------------------------------] 26% est: 6s \r plot: [4, 3] [=============>--------------------------------------] 27% est: 6s \r plot: [4, 4] [=============>--------------------------------------] 28% est: 6s \r plot: [4, 5] [==============>-------------------------------------] 28% est: 6s \r plot: [4, 6] [==============>-------------------------------------] 29% est: 6s \r plot: [4, 7] [===============>------------------------------------] 30% est: 6s \r plot: [4, 8] [===============>--------------------------",
        "----------] 31% est: 6s \r plot: [4, 9] [===============>------------------------------------] 31% est: 6s \r plot: [4, 10] [===============>-----------------------------------] 32% est: 6s \r plot: [4, 11] [================>----------------------------------] 33% est: 6s \r plot: [4, 12] [================>----------------------------------] 33% est: 6s \r plot: [5, 1] [=================>----------------------------------] 34% est: 6s \r plot: [5, 2] [=================>----------------------------------] 35% est:",
        " 5s \r plot: [5, 3] [=================>----------------------------------] 35% est: 5s \r plot: [5, 4] [==================>---------------------------------] 36% est: 5s \r plot: [5, 5] [==================>---------------------------------] 37% est: 5s \r plot: [5, 6] [===================>--------------------------------] 38% est: 5s \r plot: [5, 7] [===================>--------------------------------] 38% est: 5s \r plot: [5, 8] [===================>--------------------------------] 39% est: 5s \r plot: [5, 9] [",
        "====================>-------------------------------] 40% est: 5s \r plot: [5, 10] [====================>------------------------------] 40% est: 5s \r plot: [5, 11] [====================>------------------------------] 41% est: 5s \r plot: [5, 12] [====================>------------------------------] 42% est: 5s \r plot: [6, 1] [=====================>------------------------------] 42% est: 5s \r plot: [6, 2] [=====================>------------------------------] 43% est: 5s \r plot: [6, 3] [====================",
        "==>-----------------------------] 44% est: 5s \r plot: [6, 4] [======================>-----------------------------] 44% est: 4s \r plot: [6, 5] [======================>-----------------------------] 45% est: 4s \r plot: [6, 6] [=======================>----------------------------] 46% est: 4s \r plot: [6, 7] [=======================>----------------------------] 47% est: 4s \r plot: [6, 8] [========================>---------------------------] 47% est: 4s \r plot: [6, 9] [========================>---------------",
        "------------] 48% est: 4s \r plot: [6, 10] [========================>--------------------------] 49% est: 4s \r plot: [6, 11] [========================>--------------------------] 49% est: 4s \r plot: [6, 12] [=========================>-------------------------] 50% est: 4s \r plot: [7, 1] [=========================>--------------------------] 51% est: 4s \r plot: [7, 2] [==========================>-------------------------] 51% est: 4s \r plot: [7, 3] [==========================>-------------------------] 52% es",
        "t: 4s \r plot: [7, 4] [==========================>-------------------------] 53% est: 4s \r plot: [7, 5] [===========================>------------------------] 53% est: 4s \r plot: [7, 6] [===========================>------------------------] 54% est: 4s \r plot: [7, 7] [============================>-----------------------] 55% est: 3s \r plot: [7, 8] [============================>-----------------------] 56% est: 3s \r plot: [7, 9] [============================>-----------------------] 56% est: 3s \r plot: [7, 10",
        "] [============================>----------------------] 57% est: 3s \r plot: [7, 11] [============================>----------------------] 58% est: 3s \r plot: [7, 12] [=============================>---------------------] 58% est: 3s \r plot: [8, 1] [==============================>---------------------] 59% est: 3s \r plot: [8, 2] [==============================>---------------------] 60% est: 3s \r plot: [8, 3] [==============================>---------------------] 60% est: 3s \r plot: [8, 4] [==================",
        "=============>--------------------] 61% est: 3s \r plot: [8, 5] [===============================>--------------------] 62% est: 3s \r plot: [8, 6] [===============================>--------------------] 62% est: 3s \r plot: [8, 7] [================================>-------------------] 63% est: 3s \r plot: [8, 8] [================================>-------------------] 64% est: 3s \r plot: [8, 9] [=================================>------------------] 65% est: 3s \r plot: [8, 10] [================================>----",
        "--------------] 65% est: 3s \r plot: [8, 11] [=================================>-----------------] 66% est: 3s \r plot: [8, 12] [=================================>-----------------] 67% est: 3s \r plot: [9, 1] [==================================>-----------------] 67% est: 2s \r plot: [9, 2] [==================================>-----------------] 68% est: 2s \r plot: [9, 3] [===================================>----------------] 69% est: 2s \r plot: [9, 4] [===================================>----------------] 69% ",
        "est: 2s \r plot: [9, 5] [===================================>----------------] 70% est: 2s \r plot: [9, 6] [====================================>---------------] 71% est: 2s \r plot: [9, 7] [====================================>---------------] 72% est: 2s \r plot: [9, 8] [=====================================>--------------] 72% est: 2s \r plot: [9, 9] [=====================================>--------------] 73% est: 2s \r plot: [9, 10] [=====================================>-------------] 74% est: 2s \r plot: [9, ",
        "11] [=====================================>-------------] 74% est: 2s \r plot: [9, 12] [=====================================>-------------] 75% est: 2s \r plot: [10, 1] [======================================>------------] 76% est: 2s \r plot: [10, 2] [======================================>------------] 76% est: 2s \r plot: [10, 3] [======================================>------------] 77% est: 2s \r plot: [10, 4] [=======================================>-----------] 78% est: 2s \r plot: [10, 5] [===============",
        "========================>-----------] 78% est: 2s \r plot: [10, 6] [=======================================>-----------] 79% est: 2s \r plot: [10, 7] [========================================>----------] 80% est: 1s \r plot: [10, 8] [========================================>----------] 81% est: 1s \r plot: [10, 9] [========================================>----------] 81% est: 1s \r plot: [10, 10] [========================================>---------] 82% est: 1s \r plot: [10, 11] [==================================",
        "======>---------] 83% est: 1s \r plot: [10, 12] [=========================================>--------] 83% est: 1s \r plot: [11, 1] [==========================================>--------] 84% est: 1s \r plot: [11, 2] [==========================================>--------] 85% est: 1s \r plot: [11, 3] [===========================================>-------] 85% est: 1s \r plot: [11, 4] [===========================================>-------] 86% est: 1s \r plot: [11, 5] [===========================================>-------] 87",
        "% est: 1s \r plot: [11, 6] [============================================>------] 88% est: 1s \r plot: [11, 7] [============================================>------] 88% est: 1s \r plot: [11, 8] [============================================>------] 89% est: 1s \r plot: [11, 9] [=============================================>-----] 90% est: 1s \r plot: [11, 10] [============================================>-----] 90% est: 1s \r plot: [11, 11] [============================================>-----] 91% est: 1s \r plot: [1",
        "1, 12] [=============================================>----] 92% est: 1s \r plot: [12, 1] [==============================================>----] 92% est: 1s \r plot: [12, 2] [==============================================>----] 93% est: 1s \r plot: [12, 3] [===============================================>---] 94% est: 0s \r plot: [12, 4] [===============================================>---] 94% est: 0s \r plot: [12, 5] [================================================>--] 95% est: 0s \r plot: [12, 6] [=============",
        "===================================>--] 96% est: 0s \r plot: [12, 7] [================================================>--] 97% est: 0s \r plot: [12, 8] [=================================================>-] 97% est: 0s \r plot: [12, 9] [=================================================>-] 98% est: 0s \r plot: [12, 10] [================================================>-] 99% est: 0s \r plot: [12, 11] [=================================================>] 99% est: 0s \r plot: [12, 12] [================================",
        "==================]100% est: 0s \r                                                                                 \r",
        "> ",
        "> ",
        "# 6. Ordinary Least Squares Regression (OLS)",
        "> ",
        "model_ols <- lm(Qual ~ ., data = data_wine_tidy)",
        "> ",
        "summary(model_ols)",
        "\nCall:\nlm(formula = Qual ~ ., data = data_wine_tidy)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.68911 -0.36652 -0.04699  0.45202  2.02498 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.197e+01  2.119e+01   1.036   0.3002    \nFixAcid      2.499e-02  2.595e-02   0.963   0.3357    \nVolAcid     -1.084e+00  1.211e-01  -8.948  < 2e-16 ***\nCitAcid     -1.826e-01  1.472e-01  -1.240   0.2150    \nSugar        1.633e-02  1.500e-02   1.089   0.2765    \nChlor     ",
        "  -1.874e+00  4.193e-01  -4.470 8.37e-06 ***\nFSO2         4.361e-03  2.171e-03   2.009   0.0447 *  \nTSO2        -3.265e-03  7.287e-04  -4.480 8.00e-06 ***\nDens        -1.788e+01  2.163e+01  -0.827   0.4086    \npH          -4.137e-01  1.916e-01  -2.159   0.0310 *  \nSulph        9.163e-01  1.143e-01   8.014 2.13e-15 ***\nAlc          2.762e-01  2.648e-02  10.429  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.648 on 1587 degrees of",
        " freedom\nMultiple R-squared:  0.3606,\tAdjusted R-squared:  0.3561 \nF-statistic: 81.35 on 11 and 1587 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "> ",
        "# Regression diagnostic plots (residuals, Q-Q, leverage points, etc.)",
        "> ",
        "par(mfrow = c(2, 2))",
        "> ",
        "plot(model_ols)",
        "> ",
        "par(mfrow = c(1, 1))",
        "> ",
        "> ",
        "diagnosis(model_ols)",
        "There were 13 warnings (use warnings() to see them)\n",
        "> ",
        "> ",
        "# 7. Lasso regression: glmnet package",
        "> ",
        "# ─────────────────────────────────────────────────────────────────────────────",
        "> ",
        "library(glmnet)",
        "Loaded glmnet 4.1-8\nWarning message:\npackage ‘glmnet’ was built under R version 4.4.3 \n",
        "> ",
        "> ",
        "# Prepare matrices: x (independent variables), y (dependent variable)",
        "> ",
        "x <- model.matrix(Qual ~ ., data = data_wine_tidy)[, -1]",
        "> ",
        "y <- data_wine_tidy$Qual",
        "> ",
        "> ",
        "# 7.1 10-fold cross-validation to find optimal λ",
        "> ",
        "set.seed(2025)",
        "> ",
        "cv_lasso <- cv.glmnet(x, y, alpha = 1, family = \"gaussian\", standardize = TRUE, nfolds = 10)",
        "There were 18 warnings (use warnings() to see them)\n",
        "> ",
        "plot(cv_lasso)                # Error curve",
        "> ",
        "best_lambda <- cv_lasso$lambda.min",
        "> ",
        "best_lambda",
        "[1] 0.0084769\n",
        "> ",
        "> ",
        "# 7.2 Extract coefficients",
        "> ",
        "lasso_coef <- coef(cv_lasso, s = \"lambda.min\")",
        "> ",
        "print(lasso_coef)             # Non-zero coefficients are variables selected by Lasso",
        "12 x 1 sparse Matrix of class \"dgCMatrix\"\n                      s1\n(Intercept)  4.162837203\nFixAcid      .          \nVolAcid     -1.024302103\nCitAcid      .          \nSugar        0.001338421\nChlor       -1.709310471\nFSO2         0.002439166\nTSO2        -0.002673964\nDens         .          \npH          -0.382460651\nSulph        0.819613626\nAlc          0.285179090\n",
        "> ",
        "> ",
        "# ─────────────────────────────────────────────────────────────────────────────",
        "> ",
        "# 8. Model performance comparison (RMSE under cross-validation)",
        "> ",
        "# ─────────────────────────────────────────────────────────────────────────────",
        "> ",
        "> ",
        "library(caret)",
        "Loading required package: lattice\n\nAttaching package: ‘caret’\n\nThe following object is masked from ‘package:purrr’:\n\n    lift\n\nWarning message:\npackage ‘caret’ was built under R version 4.4.3 \n",
        "> ",
        "> ",
        "set.seed(2025)",
        "> ",
        "train_ctrl <- trainControl(method = \"cv\", number = 10)",
        "> ",
        "> ",
        "# OLS CV",
        "> ",
        "ols_cv <- train(",
        "+ ",
        "  Qual ~ .,",
        "+ ",
        "  data      = data_wine_tidy,",
        "+ ",
        "  method    = \"lm\",",
        "+ ",
        "  trControl = train_ctrl",
        "+ ",
        ")",
        "> ",
        "> ",
        "# Lasso CV",
        "> ",
        "lasso_cv <- train(",
        "+ ",
        "  Qual ~ .,",
        "+ ",
        "  data      = data_wine_tidy,",
        "+ ",
        "  method    = \"glmnet\",",
        "+ ",
        "  trControl = train_ctrl,",
        "+ ",
        "  tuneGrid  = expand.grid(alpha = 1, lambda = cv_lasso$lambda)",
        "+ ",
        ")",
        "Warning message:\nIn nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo,  :\n  There were missing values in resampled performance measures.\n",
        "> ",
        "> ",
        "# Output model performance",
        "> ",
        "ols_cv",
        "Linear Regression \n\n1599 samples\n  11 predictor\n\nNo pre-processing\nResampling: Cross-Validated (10 fold) \nSummary of sample sizes: 1439, 1438, 1440, 1438, 1440, 1439, ... \nResampling results:\n\n  RMSE      Rsquared   MAE      \n  0.649179  0.3549514  0.5043863\n\nTuning parameter 'intercept' was held constant at a value of TRUE\n",
        "> ",
        "lasso_cv",
        "glmnet \n\n1599 samples\n  11 predictor\n\nNo pre-processing\nResampling: Cross-Validated (10 fold) \nSummary of sample sizes: 1440, 1438, 1438, 1439, 1439, 1439, ... \nResampling results across tuning parameters:\n\n  lambda        RMSE       Rsquared   MAE      \n  0.0006265041  0.6501970  0.3564867  0.5038072\n  0.0006875875  0.6501960  0.3564819  0.5038160\n  0.0007546264  0.6501962  0.3564730  0.5038354\n  0.0008282016  0.6501985  0.3564624  0.5038567\n  0.0009089502  0.6502013  0.3564485  0.5038812\n  0.0009975717  0",
        ".6502046  0.3564327  0.5039077\n  0.0010948337  0.6502092  0.3564136  0.5039355\n  0.0012015787  0.6502134  0.3563954  0.5039635\n  0.0013187311  0.6502147  0.3563814  0.5039930\n  0.0014473057  0.6502182  0.3563617  0.5040266\n  0.0015884163  0.6502194  0.3563450  0.5040618\n  0.0017432849  0.6502206  0.3563275  0.5040992\n  0.0019132530  0.6502235  0.3563048  0.5041430\n  0.0020997928  0.6502279  0.3562779  0.5041919\n  0.0023045200  0.6502339  0.3562471  0.5042434\n  0.0025292079  0.6502412  0.3562116  0.5043015\n ",
        " 0.0027758025  0.6502492  0.3561727  0.5043640\n  0.0030464399  0.6502585  0.3561295  0.5044340\n  0.0033434640  0.6502670  0.3560854  0.5045104\n  0.0036694476  0.6502719  0.3560484  0.5045925\n  0.0040272142  0.6502779  0.3560094  0.5046846\n  0.0044198626  0.6502767  0.3559911  0.5047737\n  0.0048507938  0.6502671  0.3559931  0.5048535\n  0.0053237402  0.6502580  0.3559938  0.5049368\n  0.0058427983  0.6502575  0.3559784  0.5050344\n  0.0064124639  0.6502645  0.3559531  0.5051421\n  0.0070376712  0.6502640  0.3559",
        "524  0.5052592\n  0.0077238354  0.6502882  0.3559155  0.5054089\n  0.0084768999  0.6503354  0.3558525  0.5056002\n  0.0093033871  0.6504136  0.3557370  0.5058603\n  0.0102104559  0.6505255  0.3555673  0.5061887\n  0.0112059627  0.6506696  0.3553450  0.5065658\n  0.0122985303  0.6508490  0.3550661  0.5069934\n  0.0134976218  0.6510710  0.3547185  0.5074981\n  0.0148136232  0.6512884  0.3543980  0.5080432\n  0.0162579332  0.6514958  0.3541195  0.5086155\n  0.0178430616  0.6516640  0.3539645  0.5091412\n  0.0195827381  0",
        ".6518727  0.3537829  0.5096931\n  0.0214920309  0.6521375  0.3535403  0.5103415\n  0.0235874774  0.6525151  0.3531344  0.5110585\n  0.0258872273  0.6530140  0.3525502  0.5118533\n  0.0284112000  0.6536424  0.3517767  0.5127843\n  0.0311812569  0.6544005  0.3508195  0.5138788\n  0.0342213910  0.6553133  0.3496351  0.5151047\n  0.0375579344  0.6564096  0.3481681  0.5165124\n  0.0412197866  0.6577296  0.3463390  0.5181055\n  0.0452386649  0.6592028  0.3443257  0.5198905\n  0.0496493789  0.6607325  0.3423625  0.5218508\n ",
        " 0.0544901321  0.6622405  0.3406336  0.5240290\n  0.0598028527  0.6637331  0.3392155  0.5263818\n  0.0656335570  0.6653073  0.3379813  0.5288651\n  0.0720327478  0.6671730  0.3365070  0.5316125\n  0.0790558517  0.6692608  0.3349275  0.5345729\n  0.0867636997  0.6716178  0.3332489  0.5378210\n  0.0952230533  0.6741961  0.3317542  0.5412852\n  0.1045071834  0.6772283  0.3299921  0.5451729\n  0.1146965048  0.6808586  0.3276420  0.5496967\n  0.1258792724  0.6852031  0.3244493  0.5548910\n  0.1381523461  0.6903535  0.3201",
        "744  0.5607205\n  0.1516220293  0.6959305  0.3162196  0.5669211\n  0.1664049900  0.7016264  0.3144665  0.5732483\n  0.1826292711  0.7083142  0.3124425  0.5804545\n  0.2004353996  0.7162780  0.3094150  0.5891378\n  0.2199776036  0.7257552  0.3044597  0.5994295\n  0.2414251484  0.7370098  0.2956973  0.6116218\n  0.2649638023  0.7503432  0.2785835  0.6256516\n  0.2907974459  0.7654299  0.2469003  0.6412242\n  0.3191498379  0.7785059  0.2311166  0.6550936\n  0.3502665531  0.7918476  0.2304616  0.6686425\n  0.3844171096  0",
        ".8061633  0.1910842  0.6822860\n\nTuning parameter 'alpha' was held constant at a value of 1\nRMSE was used to select the optimal model using the smallest value.\nThe final values used for the model were alpha = 1 and lambda = 0.0006875875.\n",
        "> ",
        "> ",
        "> ",
        "# ─────────────────────────────────────────────────────────────────────────────",
        "> ",
        "# 9. Bayesian regression: rstanarm package",
        "> ",
        "# ─────────────────────────────────────────────────────────────────────────────",
        "> ",
        "library(rstanarm)",
        "Loading required package: Rcpp\nThis is rstanarm version 2.32.1\n- See https://mc-stan.org/rstanarm/articles/priors for changes to default priors!\n- Default priors may change, so it's safest to specify priors, even if equivalent to the defaults.\n- For execution on a local, multicore CPU with excess RAM we recommend calling\n  options(mc.cores = parallel::detectCores())\n\nAttaching package: ‘rstanarm’\n\nThe following objects are masked from ‘package:caret’:\n\n    compare_models, R2\n\nWarning messages:\n1: pa",
        "ckage ‘rstanarm’ was built under R version 4.4.3 \n2: package ‘Rcpp’ was built under R version 4.4.3 \n",
        "> ",
        "> ",
        "# 9.1 Fit the model (default: Gaussian family)",
        "> ",
        "model_bayes <- stan_glm(",
        "+ ",
        "  Qual ~ .,",
        "+ ",
        "  data            = data_wine_tidy,",
        "+ ",
        "  family          = gaussian(),",
        "+ ",
        "  prior           = normal(0, 1),        # Prior for fixed effects",
        "+ ",
        "  prior_intercept = normal(0, 5),        # Prior for intercept",
        "+ ",
        "  chains          = 4,",
        "+ ",
        "  cores           = parallel::detectCores(),",
        "+ ",
        "  iter            = 2000,",
        "+ ",
        "  seed            = 2025",
        "+ ",
        ")",
        "> ",
        "> ",
        "print(model_bayes, digits = 2)",
        "stan_glm\n family:       gaussian [identity]\n formula:      Qual ~ .\n observations: 1599\n predictors:   12\n------\n            Median MAD_SD\n(Intercept)  4.32   1.14 \nFixAcid      0.01   0.02 \nVolAcid     -1.11   0.12 \nCitAcid     -0.20   0.15 \nSugar        0.01   0.01 \nChlor       -1.62   0.39 \nFSO2         0.00   0.00 \nTSO2         0.00   0.00 \nDens        -0.03   0.98 \npH          -0.47   0.16 \nSulph        0.86   0.11 \nAlc          0.30   0.02 \n\nAuxiliary parameter(s):\n      Median MAD_SD\nsigma 0.65   0.0",
        "1  \n\n------\n* For help interpreting the printed output see ?print.stanreg\n* For info on the priors used see ?prior_summary.stanreg\n",
        "> ",
        "> ",
        "# 9.2 Posterior intervals",
        "> ",
        "posterior_interval(model_bayes, prob = 0.95)",
        "                    2.5%        97.5%\n(Intercept)  2.161777580  6.561926231\nFixAcid     -0.020483751  0.042352640\nVolAcid     -1.336749355 -0.872441568\nCitAcid     -0.485955270  0.077822590\nSugar       -0.015197755  0.031983358\nChlor       -2.358291147 -0.839170318\nFSO2         0.000351888  0.008564680\nTSO2        -0.004658825 -0.001894147\nDens        -1.990810035  1.852625233\npH          -0.766555153 -0.173907256\nSulph        0.635652027  1.064815431\nAlc          0.262946611  0.330166945\nsigma        0.626",
        "029902  0.671132262\n",
        "> ",
        "> ",
        "# 9.3 Posterior predictive check",
        "> ",
        "pp_check(model_bayes)        # KDE comparison",
        "> ",
        "data_core <- data_wine_tidy |>",
        "There were 18 warnings (use warnings() to see them)\n",
        "+ ",
        "  select(FixAcid, VolAcid, Alc, Qual) |>",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = everything(),",
        "+ ",
        "    names_to  = \"Variable\",",
        "+ ",
        "    values_to = \"Value\"",
        "+ ",
        "  )",
        "> ",
        "> ",
        "# Plot boxplots for core variables",
        "> ",
        "ggplot(data_core, aes(x = Variable, y = Value)) +",
        "+ ",
        "  geom_boxplot(fill = \"lightblue\", outlier.color = \"darkred\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Distribution of Core Variables (Boxplots)\",",
        "+ ",
        "    x     = NULL,",
        "+ ",
        "    y     = \"Value\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal(base_size = 14)",
        "> ",
        "corr_mat <- cor(data_wine_tidy, use = \"pairwise.complete.obs\")",
        "> ",
        "> ",
        "# 2. Generate a gradient color from blue to white to red",
        "> ",
        "my_col <- colorRampPalette(c(\"#2166AC\", \"white\", \"#B2182B\"))(200)",
        "> ",
        "> ",
        "# 3. Plot",
        "> ",
        "corrplot(",
        "+ ",
        "  corr_mat,",
        "+ ",
        "  method      = \"color\",      # Fill squares with color",
        "+ ",
        "  col         = my_col,       # Custom color scheme",
        "+ ",
        "  type        = \"upper\",      # Only plot upper triangle",
        "+ ",
        "  order       = \"hclust\",     # Sort by hierarchical clustering",
        "+ ",
        "  tl.col      = \"black\",      # Variable label color",
        "+ ",
        "  tl.srt      = 45,           # Rotate labels 45°",
        "+ ",
        "  tl.cex      = 0.8,          # Label font size",
        "+ ",
        "  addCoef.col = \"black\",      # Add coefficients in squares",
        "+ ",
        "  number.cex  = 0.7,          # Coefficient font size",
        "+ ",
        "  diag        = FALSE,        # Do not plot diagonal",
        "+ ",
        "  mar         = c(0,0,1,0)    # Leave space for title",
        "+ ",
        ")",
        "> ",
        "title(\"Wine Quality Variable correlation heatmap\", line = 0.5, cex.main = 1.2)",
        "> ",
        "> ",
        "# 4.3 ggcorrplot package example (more visually appealing)",
        "> ",
        "ggcorrplot(",
        "+ ",
        "  corr_mat,",
        "+ ",
        "  hc.order = TRUE,",
        "+ ",
        "  lab      = TRUE,          # Write coefficients in squares",
        "+ ",
        "  lab_size = 3,",
        "+ ",
        "  outline.col = \"white\"",
        "+ ",
        ")",
        "> ",
        "# define the four core variables",
        "> ",
        "vars <- c(\"Alc\", \"FixAcid\", \"VolAcid\", \"Qual\")",
        "> ",
        "> ",
        "# compute min, Q1, median, Q3, max",
        "> ",
        "five_num <- sapply(data_wine_tidy[vars],",
        "+ ",
        "                   function(x) quantile(x, probs = c(0, .25, .5, .75, 1)))",
        "> ",
        "> ",
        "# transpose and convert to a nice table",
        "> ",
        "five_num_df <- as.data.frame(t(five_num))",
        "> ",
        "colnames(five_num_df) <- c(\"Min\", \"Q1\", \"Median\", \"Q3\", \"Max\")",
        "> ",
        "> ",
        "# print with knitr::kable",
        "> ",
        "kable(five_num_df, ",
        "+ ",
        "      caption = \"Five‐Number Summaries for Core Variables\",",
        "+ ",
        "      digits = 2, ",
        "+ ",
        "      align = \"c\")",
        "Error in kable(five_num_df, caption = \"Five‐Number Summaries for Core Variables\",  : \n  could not find function \"kable\"\n",
        "> ",
        "# Loading necessary library",
        "> ",
        "library(tidyverse)",
        "> ",
        "library(here)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(ds4ling)",
        "> ",
        "library(lme4)",
        "> ",
        "library(lmerTest)",
        "> ",
        "library(GGally)       # ggpairs()",
        "> ",
        "library(corrplot)     # corrplot()",
        "> ",
        "library(ggcorrplot)   # ggcorrplot()",
        "> ",
        "library(glmnet)",
        "> ",
        "library(caret)",
        "> ",
        "library(rstanarm)",
        "> ",
        "library(knitr)",
        "> ",
        "> ",
        "# Read the raw data",
        "> ",
        "data_wine_raw <- read.csv(",
        "+ ",
        "  here(\"data_raw\", \"winequality-red.csv\"),",
        "+ ",
        "  header = TRUE,",
        "+ ",
        "  sep = \";\",",
        "+ ",
        "  stringsAsFactors = FALSE",
        "+ ",
        ")",
        "> ",
        "> ",
        "data_wine_tidy <- data_wine_raw |>",
        "+ ",
        "  rename(",
        "+ ",
        "    FixAcid = fixed.acidity,",
        "+ ",
        "    VolAcid = volatile.acidity,",
        "+ ",
        "    CitAcid = citric.acid,",
        "+ ",
        "    Sugar   = residual.sugar,",
        "+ ",
        "    Chlor   = chlorides,",
        "+ ",
        "    FSO2    = free.sulfur.dioxide,",
        "+ ",
        "    TSO2    = total.sulfur.dioxide,",
        "+ ",
        "    Dens    = density,",
        "+ ",
        "    pH      = pH,",
        "+ ",
        "    Sulph   = sulphates,",
        "+ ",
        "    Alc     = alcohol,",
        "+ ",
        "    Qual    = quality",
        "+ ",
        "  )",
        "> ",
        "> ",
        "mini_table <- data_wine_tidy |>",
        "+ ",
        "  select(FixAcid, VolAcid, Sugar, Chlor, Alc, Qual) |>",
        "+ ",
        "  head(6)",
        "> ",
        "kable(mini_table, caption = \"data_wine_tidy (Part vars)\", align=\"c\")",
        "> ",
        "# define the four core variables",
        "> ",
        "vars <- c(\"Alc\", \"FixAcid\", \"VolAcid\", \"Qual\")",
        "> ",
        "> ",
        "# compute min, Q1, median, Q3, max",
        "> ",
        "five_num <- sapply(data_wine_tidy[vars],",
        "+ ",
        "                   function(x) quantile(x, probs = c(0, .25, .5, .75, 1)))",
        "> ",
        "> ",
        "# transpose and convert to a nice table",
        "> ",
        "five_num_df <- as.data.frame(t(five_num))",
        "> ",
        "colnames(five_num_df) <- c(\"Min\", \"Q1\", \"Median\", \"Q3\", \"Max\")",
        "> ",
        "> ",
        "# print with knitr::kable",
        "> ",
        "kable(five_num_df, ",
        "+ ",
        "      caption = \"Five‐Number Summaries for Core Variables\",",
        "+ ",
        "      digits = 2, ",
        "+ ",
        "      align = \"c\")",
        "> ",
        "# define the four core variables",
        "> ",
        "vars <- c(\"Alc\", \"FixAcid\", \"VolAcid\", \"Qual\")",
        "> ",
        "> ",
        "# compute min, Q1, median, Q3, max",
        "> ",
        "five_num <- sapply(data_wine_tidy[vars],",
        "+ ",
        "                   function(x) quantile(x, probs = c(0, .25, .5, .75, 1)))",
        "> ",
        "> ",
        "# transpose and convert to a nice table",
        "> ",
        "five_num_df <- as.data.frame(t(five_num))",
        "> ",
        "colnames(five_num_df) <- c(\"Min\", \"Q1\", \"Median\", \"Q3\", \"Max\")",
        "> ",
        "> ",
        "# print with knitr::kable",
        "> ",
        "kable(five_num_df, ",
        "+ ",
        "      caption = \"Five‐Number Summaries for Core Variables\",",
        "+ ",
        "      digits = 2, ",
        "+ ",
        "      align = \"c\")",
        "> ",
        "ggplot(data_core, aes(x = Variable, y = Value)) +",
        "+ ",
        "  geom_boxplot(fill = \"lightblue\", outlier.color = \"darkred\") +",
        "+ ",
        "  labs(",
        "+ ",
        "    title = \"Distribution of Core Variables (Boxplots)\",",
        "+ ",
        "    x     = NULL,",
        "+ ",
        "    y     = \"Value\"",
        "+ ",
        "  ) +",
        "+ ",
        "  theme_minimal(base_size = 14)+",
        "+ ",
        "  scale_fill_brewer(palette = \"Pastel1\") + ",
        "+ ",
        "  theme(legend.position = \"none\")",
        "\nRestarting R session...\n\n",
        "> ",
        "# Loading necessary library",
        "> ",
        "library(tidyverse)",
        "── \u001B[1mAttaching core tidyverse packages\u001B[22m ─────────────────────────── tidyverse 2.0.0 ──\n\u001B[32m✔\u001B[39m \u001B[34mdplyr    \u001B[39m 1.1.4     \u001B[32m✔\u001B[39m \u001B[34mreadr    \u001B[39m 2.1.5\n\u001B[32m✔\u001B[39m \u001B[34mforcats  \u001B[39m 1.0.0     \u001B[32m✔\u001B[39m \u001B[34mstringr  \u001B[39m 1.5.1\n\u001B[32m✔\u001B[39m \u001B[34mggplot2  \u001B[39m 3.5.1     \u001B[32m✔\u001B[39m \u001B[34mtibble   \u001B[39m 3.2.1\n\u001B[32m✔\u001B[39m \u001B[34mlubridate\u001B[39m 1.9.4     \u001B[32m✔\u001B[39m \u001B[34mtidyr    \u001B[39m 1.3.1\n\u001B[32m✔\u001B[39m \u001B[34mpu",
        "rrr    \u001B[39m 1.0.4     \n── \u001B[1mConflicts\u001B[22m ───────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mfilter()\u001B[39m masks \u001B[34mstats\u001B[39m::filter()\n\u001B[31m✖\u001B[39m \u001B[34mdplyr\u001B[39m::\u001B[32mlag()\u001B[39m    masks \u001B[34mstats\u001B[39m::lag()\n\u001B[36mℹ\u001B[39m Use the \u001B]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001B]8;;\u0007 to force all conflicts to become errors\n",
        "Warning messages:\n1: package ‘purrr’ was built under R version 4.4.3 \n2: package ‘lubridate’ was built under R version 4.4.3 \n",
        "> ",
        "library(here)",
        "here() starts at C:/Users/zhang/OneDrive/Desktop/ds4ling_research_project\n",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(ds4ling)",
        "\n ds4ling loaded\n Happy coding!\n",
        "> ",
        "library(lme4)",
        "Loading required package: Matrix\n\nAttaching package: ‘Matrix’\n\nThe following objects are masked from ‘package:tidyr’:\n\n    expand, pack, unpack\n\nWarning message:\npackage ‘lme4’ was built under R version 4.4.3 \n",
        "> ",
        "library(lmerTest)",
        "\nAttaching package: ‘lmerTest’\n\nThe following object is masked from ‘package:lme4’:\n\n    lmer\n\nThe following object is masked from ‘package:stats’:\n\n    step\n\nWarning message:\npackage ‘lmerTest’ was built under R version 4.4.3 \n",
        "> ",
        "library(GGally)       # ggpairs()",
        "Registered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\nWarning message:\npackage ‘GGally’ was built under R version 4.4.3 \n",
        "> ",
        "library(corrplot)     # corrplot()",
        "corrplot 0.95 loaded\nWarning message:\npackage ‘corrplot’ was built under R version 4.4.3 \n",
        "> ",
        "library(ggcorrplot)   # ggcorrplot()",
        "Warning message:\npackage ‘ggcorrplot’ was built under R version 4.4.3 \n",
        "> ",
        "# Read the raw data",
        "> ",
        "data_wine_raw <- read.csv(",
        "+ ",
        "  here(\"data_raw\", \"winequality-red.csv\"),",
        "+ ",
        "  header = TRUE,",
        "+ ",
        "  sep = \";\",",
        "+ ",
        "  stringsAsFactors = FALSE",
        "+ ",
        ")",
        "> ",
        "# Test if there has any NA in data_wine_raw",
        "> ",
        "anyNA(data_wine_raw)",
        "[1] FALSE\n",
        "> ",
        "colSums(is.na(data_wine_raw))",
        "       fixed.acidity     volatile.acidity          citric.acid \n                   0                    0                    0 \n      residual.sugar            chlorides  free.sulfur.dioxide \n                   0                    0                    0 \ntotal.sulfur.dioxide              density                   pH \n                   0                    0                    0 \n           sulphates              alcohol              quality \n                   0                    0                    0 \n",
        "> ",
        "# View data structure",
        "> ",
        "glimpse(data_wine_raw)",
        "Rows: 1,599\nColumns: 12\n$ fixed.acidity        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 7.4, 7.8, 7.8, 11.2, 7.4, 7.4, 7.9, 7.3, 7.8, 7.5, 6…\n$ volatile.acidity     \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.700, 0.880, 0.760, 0.280, 0.700, 0.660, 0.600, 0.6…\n$ citric.acid          \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.00, 0.00, 0.04, 0.56, 0.00, 0.00, 0.06, 0.00, 0.02…\n$ residual.sugar       \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 1.9, 2.6, 2.3, 1.9, 1.9, 1.8, 1.6, 1.2, 2.0, 6.1, 1.…\n$ chlorides            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m",
        "\u001B[23m 0.076, 0.098, 0.092, 0.075, 0.076, 0.075, 0.069, 0.0…\n$ free.sulfur.dioxide  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 11, 25, 15, 17, 11, 13, 15, 15, 9, 17, 15, 17, 16, 9…\n$ total.sulfur.dioxide \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 34, 67, 54, 60, 34, 40, 59, 21, 18, 102, 65, 102, 59…\n$ density              \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.9978, 0.9968, 0.9970, 0.9980, 0.9978, 0.9978, 0.99…\n$ pH                   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 3.51, 3.20, 3.26, 3.16, 3.51, 3.51, 3.30, 3.39, 3.36…\n$ sulphate",
        "s            \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 0.56, 0.68, 0.65, 0.58, 0.56, 0.56, 0.46, 0.47, 0.57…\n$ alcohol              \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m 9.4, 9.8, 9.8, 9.8, 9.4, 9.4, 9.4, 10.0, 9.5, 10.5, …\n$ quality              \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m 5, 5, 5, 6, 5, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5, 7, 5…\n",
        "> ",
        "summary(data_wine_raw)",
        " fixed.acidity   volatile.acidity  citric.acid    residual.sugar  \n Min.   : 4.60   Min.   :0.1200   Min.   :0.000   Min.   : 0.900  \n 1st Qu.: 7.10   1st Qu.:0.3900   1st Qu.:0.090   1st Qu.: 1.900  \n Median : 7.90   Median :0.5200   Median :0.260   Median : 2.200  \n Mean   : 8.32   Mean   :0.5278   Mean   :0.271   Mean   : 2.539  \n 3rd Qu.: 9.20   3rd Qu.:0.6400   3rd Qu.:0.420   3rd Qu.: 2.600  \n Max.   :15.90   Max.   :1.5800   Max.   :1.000   Max.   :15.500  \n   chlorides       free.sulfur.dioxide tota",
        "l.sulfur.dioxide    density      \n Min.   :0.01200   Min.   : 1.00       Min.   :  6.00       Min.   :0.9901  \n 1st Qu.:0.07000   1st Qu.: 7.00       1st Qu.: 22.00       1st Qu.:0.9956  \n Median :0.07900   Median :14.00       Median : 38.00       Median :0.9968  \n Mean   :0.08747   Mean   :15.87       Mean   : 46.47       Mean   :0.9967  \n 3rd Qu.:0.09000   3rd Qu.:21.00       3rd Qu.: 62.00       3rd Qu.:0.9978  \n Max.   :0.61100   Max.   :72.00       Max.   :289.00       Max.   :1.0037  \n       pH       ",
        "   sulphates         alcohol         quality     \n Min.   :2.740   Min.   :0.3300   Min.   : 8.40   Min.   :3.000  \n 1st Qu.:3.210   1st Qu.:0.5500   1st Qu.: 9.50   1st Qu.:5.000  \n Median :3.310   Median :0.6200   Median :10.20   Median :6.000  \n Mean   :3.311   Mean   :0.6581   Mean   :10.42   Mean   :5.636  \n 3rd Qu.:3.400   3rd Qu.:0.7300   3rd Qu.:11.10   3rd Qu.:6.000  \n Max.   :4.010   Max.   :2.0000   Max.   :14.90   Max.   :8.000  \n",
        "> ",
        "data_wine_tidy <- data_wine_raw %>%",
        "+ ",
        "  rename(",
        "+ ",
        "    FixAcid = fixed.acidity,",
        "+ ",
        "    VolAcid = volatile.acidity,",
        "+ ",
        "    CitAcid = citric.acid,",
        "+ ",
        "    Sugar   = residual.sugar,",
        "+ ",
        "    Chlor   = chlorides,",
        "+ ",
        "    FSO2    = free.sulfur.dioxide,",
        "+ ",
        "    TSO2    = total.sulfur.dioxide,",
        "+ ",
        "    Dens    = density,",
        "+ ",
        "    pH      = pH,",
        "+ ",
        "    Sulph   = sulphates,",
        "+ ",
        "    Alc     = alcohol,",
        "+ ",
        "    Qual    = quality",
        "+ ",
        "  )",
        "> ",
        "# 3.3 dplyr summary: mean, median, first/third quartile",
        "> ",
        "data_wine_tidy |>",
        "+ ",
        "  summarise(across(",
        "+ ",
        "    .cols = everything(),",
        "+ ",
        "    .fns = list(",
        "+ ",
        "      mean   = ~ mean(.x, na.rm = TRUE),",
        "+ ",
        "      median = ~ median(.x, na.rm = TRUE),",
        "+ ",
        "      Q1     = ~ quantile(.x, 0.25, na.rm = TRUE),",
        "+ ",
        "      Q3     = ~ quantile(.x, 0.75, na.rm = TRUE)",
        "+ ",
        "    ),",
        "+ ",
        "    .names = \"{.col}_{.fn}\"",
        "+ ",
        "  )) |>",
        "+ ",
        "  pivot_longer(everything(),",
        "+ ",
        "               names_to  = c(\"variable\", \"stat\"),",
        "+ ",
        "               names_sep = \"_\",",
        "+ ",
        "               values_to = \"value\") %>%",
        "+ ",
        "  arrange(variable, stat)",
        "\u001B[38;5;246m# A tibble: 48 × 3\u001B[39m\n   variable stat     value\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m Alc      Q1      9.5   \n\u001B[38;5;250m 2\u001B[39m Alc      Q3     11.1   \n\u001B[38;5;250m 3\u001B[39m Alc      mean   10.4   \n\u001B[38;5;250m 4\u001B[39m Alc      median 10.2   \n\u001B[38;5;250m 5\u001B[39m Chlor    Q1      0.07  \n\u001B[38;5;250m 6\u001B[39m Chlor    Q3      0.09  \n\u001B[38;5;250m 7\u001B[39m Chlor    mean    0.087\u001B[4m5\u001B[24m\n\u001B[38;5;250m 8\u001B[39m Chlor    median  0",
        ".079 \n\u001B[38;5;250m 9\u001B[39m CitAcid  Q1      0.09  \n\u001B[38;5;250m10\u001B[39m CitAcid  Q3      0.42  \n\u001B[38;5;246m# ℹ 38 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "# Select the core variables and pivot to long format",
        "> ",
        "data_core <- data_wine_tidy |>",
        "+ ",
        "  select(FixAcid, VolAcid, Alc, Qual) |>",
        "+ ",
        "  pivot_longer(",
        "+ ",
        "    cols = everything(),",
        "+ ",
        "    names_to  = \"Variable\",",
        "+ ",
        "    values_to = \"Value\"",
        "+ ",
        "  )",
        "> ",
        "# 4.1 Calculate correlation matrix",
        "> ",
        "corr_mat <- cor(data_wine_tidy, use = \"pairwise.complete.obs\")",
        "> ",
        "# 2. Generate a gradient color from blue to white to red",
        "> ",
        "my_col <- colorRampPalette(c(\"#2166AC\", \"white\", \"#B2182B\"))(200)",
        "> ",
        "# 6. Ordinary Least Squares Regression (OLS)",
        "> ",
        "model_ols <- lm(Qual ~ ., data = data_wine_tidy)",
        "> ",
        "summary(model_ols)",
        "\nCall:\nlm(formula = Qual ~ ., data = data_wine_tidy)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.68911 -0.36652 -0.04699  0.45202  2.02498 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2.197e+01  2.119e+01   1.036   0.3002    \nFixAcid      2.499e-02  2.595e-02   0.963   0.3357    \nVolAcid     -1.084e+00  1.211e-01  -8.948  < 2e-16 ***\nCitAcid     -1.826e-01  1.472e-01  -1.240   0.2150    \nSugar        1.633e-02  1.500e-02   1.089   0.2765    \nChlor     ",
        "  -1.874e+00  4.193e-01  -4.470 8.37e-06 ***\nFSO2         4.361e-03  2.171e-03   2.009   0.0447 *  \nTSO2        -3.265e-03  7.287e-04  -4.480 8.00e-06 ***\nDens        -1.788e+01  2.163e+01  -0.827   0.4086    \npH          -4.137e-01  1.916e-01  -2.159   0.0310 *  \nSulph        9.163e-01  1.143e-01   8.014 2.13e-15 ***\nAlc          2.762e-01  2.648e-02  10.429  < 2e-16 ***\n---\nSignif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1\n\nResidual standard error: 0.648 on 1587 degrees of",
        " freedom\nMultiple R-squared:  0.3606,\tAdjusted R-squared:  0.3561 \nF-statistic: 81.35 on 11 and 1587 DF,  p-value: < 2.2e-16\n\n",
        "> ",
        "model_ols <- lm(Qual ~ ., data = data_wine_tidy)",
        "> ",
        "knitr::kable(summary(model_ols)$coefficients)",
        "\nRestarting R session...\n\n"
    ]
}